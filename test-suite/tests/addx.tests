; ADDQ tests
; On PAR with Rust manual tests

:DATA_REGISTER_BYTE_WITH_EXTEND_CLEAR

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 00000010 00000020 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZOC

assert_reg

D0 00000010 00000030 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -----

:DATA_REGISTER_BYTE_WITH_EXTEND_SET

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 00000010 00000020 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 00000031 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -----

:DATA_REGISTER_BYTE_WITH_EXTEND_SET_SET_CARRY_EXTEND

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 00000010 000000f0 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 00000001 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E---C

:DATA_REGISTER_BYTE_WITH_EXTEND_SET_SET_CARRY_EXTEND_LEAVE_ZERO_CLEARED_TEST_BOTH_CARRY

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 0000000f 000000f0 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 0000000f 00000000 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E---C

:DATA_REGISTER_BYTE_WITH_EXTEND_SET_SET_CARRY_EXTEND_LEAVE_ZERO_SET_TEST_BOTH_CARRY

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 0000000f 000000f0 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E-Z--

assert_reg

D0 0000000f 00000000 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E-Z-C

:DATA_REGISTER_BYTE_WITH_EXTEND_SET_SET_OVERFLOW_NEGATIVE

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 00000010 0000007f 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 00000090 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-O-

:DATA_REGISTER_BYTE_WITH_EXTEND_SET_SET_OVERFLOW_NEGATIVE_TEST_BOTH_OVERFLOW

arrange_code
$00040000 d3 00

assert_code
> ADDX.B D0,D1

arrange_reg

D0 00000010 0000006f 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 00000080 000000d2 000000d3 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-O-

:DATA_REGISTER_WORD_WITH_EXTEND_CLEAR

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 00001010 00002020 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZOC

assert_reg

D0 00000010 0000006f 00001010 00003030 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -----

:DATA_REGISTER_WORD_WITH_EXTEND_SET

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 00001010 00002020 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001010 00003031 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -----

:DATA_REGISTER_WORD_WITH_EXTEND_SET_SET_CARRY_EXTEND

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 00001010 0000f0f0 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001010 00000101 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E---C

:DATA_REGISTER_WORD_WITH_EXTEND_SET_SET_CARRY_EXTEND_LEAVE_ZERO_CLEARED_TEST_BOTH_CARRY

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 0000000f 0000fff0 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 0000000f 00000000 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E---C

:DATA_REGISTER_WORD_WITH_EXTEND_SET_SET_CARRY_EXTEND_LEAVE_ZERO_SET_TEST_BOTH_CARRY

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 0000000f 0000fff0 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E-Z--

assert_reg

D0 00000010 0000006f 0000000f 00000000 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E-Z-C

:DATA_REGISTER_WORD_WITH_EXTEND_SET_SET_OVERFLOW_NEGATIVE

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 00001000 00007fff 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00009000 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-O-

:DATA_REGISTER_WORD_WITH_EXTEND_SET_SET_OVERFLOW_NEGATIVE_ZERO_TEST_BOTH_OVERFLOW

arrange_code
$00040000 d7 42

assert_code
> ADDX.W D2,D3

arrange_reg

D0 00000010 0000006f 00001000 00006fff 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00008000 000000d4 000000d5 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-O-

:DATA_REGISTER_LONG_WITH_EXTEND_CLEAR

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10101010 20202020 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZOC

assert_reg

D0 00000010 0000006f 00001000 00006fff 10101010 30303030 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -----

:DATA_REGISTER_LONG_WITH_EXTEND_SET

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10101010 20202020 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00006fff 10101010 30303031 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -----

:DATA_REGISTER_LONG_WITH_EXTEND_SET_SET_CARRY_EXTEND

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10101010 f0f0f0f0 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00006fff 10101010 01010101 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E---C

:DATA_REGISTER_LONG_WITH_EXTEND_SET_SET_CARRY_EXTEND_LEAVE_ZERO_CLEARED_TEST_BOTH_CARRY

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 0000000f fffffff0 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00006fff 0000000f 00000000 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E---C

:DATA_REGISTER_LONG_WITH_EXTEND_SET_SET_CARRY_EXTEND_LEAVE_ZERO_CLEARED_SET_BOTH_CARRY

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 0000000f fffffff0 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E-Z--

assert_reg

D0 00000010 0000006f 00001000 00006fff 0000000f 00000000 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E-Z-C

:DATA_REGISTER_LONG_WITH_EXTEND_SET_SET_OVERFLOW_NEGATIVE

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 7fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 90000000 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-O-

:DATA_REGISTER_LONG_WITH_EXTEND_SET_SET_OVERFLOW_NEGATIVE_ZERO_TEST_BOTH_OVERFLOW

arrange_code
$00040000 db 84

assert_code
> ADDX.L D4,D5

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 80000000 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-O-

:ADDRESS_REGISTER_BYTE_WITH_EXTEND_CLEAR

arrange_code
$00040000 d9 0b

assert_code
> ADDX.B -(A3),-(A4)

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050003 00050004 000000a5 000000a6 000000a7
SR_FLAGS -NZOC

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050002 00050003 000000a5 000000a6 000000a7
SR_FLAGS -----

arrange_mem
$00050002 10 20

assert_mem
$00050002 10 30

:ADDRESS_REGISTER_BYTE_WITH_EXTEND_SET

arrange_code
$00040000 d9 0b

assert_code
> ADDX.B -(A3),-(A4)

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050003 00050004 000000a5 000000a6 000000a7
SR_FLAGS E----

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050002 00050003 000000a5 000000a6 000000a7
SR_FLAGS -----

arrange_mem
$00050002 10 20

assert_mem
$00050002 10 31

:ADDRESS_REGISTER_WORD_WITH_EXTEND_CLEAR

arrange_code
$00040000 dd 4d

assert_code
> ADDX.W -(A5),-(A6)

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050003 00050004 00040112 00040114 000000a7
SR_FLAGS -NZOC

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050003 00050004 00040110 00040112 000000a7
SR_FLAGS -----

arrange_mem
$00040110 10 10 20 20

assert_mem
$00040110 10 10 30 30

:ADDRESS_REGISTER_WORD_WITH_EXTEND_SET

arrange_code
$00040000 dd 4d

assert_code
> ADDX.W -(A5),-(A6)

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050003 00050004 00040112 00040114 000000a7
SR_FLAGS ENZOC

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 a0a0a0a0 000000a1 000000a2 00050003 00050004 00040110 00040112 000000a7
SR_FLAGS -----

arrange_mem
$00040110 10 10 20 20

assert_mem
$00040110 10 10 30 31

:ADDRESS_REGISTER_LONG_WITH_EXTEND_CLEAR

arrange_code
$00040000 d1 8f

assert_code
> ADDX.L -(A7),-(A0)

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 00040118 000000a1 000000a2 00050003 00050004 00040014 00040018 00040114
SR_FLAGS -NZO-

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 00040114 000000a1 000000a2 00050003 00050004 00040014 00040018 00040110
SR_FLAGS -----

arrange_mem
$00040110 10 10 10 10 20 20 20 20

assert_mem
$00040110 10 10 10 10 30 30 30 30

:ADDRESS_REGISTER_LONG_WITH_EXTEND_SET

arrange_code
$00040000 d1 8f

assert_code
> ADDX.L -(A7),-(A0)

arrange_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 00040118 000000a1 000000a2 00050003 00050004 00040014 00040018 00040114
SR_FLAGS ENZOC

assert_reg

D0 00000010 0000006f 00001000 00006fff 10000000 6fffffff 000000d6 00004344
A0 00040114 000000a1 000000a2 00050003 00050004 00040014 00040018 00040110
SR_FLAGS -----

arrange_mem
$00040110 10 10 10 10 20 20 20 20

assert_mem
$00040110 10 10 10 10 30 30 30 31

