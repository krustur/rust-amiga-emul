; LSLR tests

:THIS_TEST_IS_FOR_TESTING_PURPOSES_ONLY

arrange_code
$00040000 ed 08

assert_code
> LSL.B #$06,D0

arrange_reg

D0 00000001 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS ENZOC
; or
; SR 001f

assert_reg

D0 00000040 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

arrange_assert_mem
; address:bytes
; end with null
; $00a00000 11 22 33 44 aa bb cc dd ff
; $00a80000 "zero terminated string"
; $00a90000 1111 2222 3333 ; could also allow for words
$00000000 ; comment after

:LSL_B_REGISTER_BY_IMMEDIATE

arrange_code
$00040000 ed 08

assert_code
> LSL.B #$06,D0

arrange_reg
D0 00000001 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS ENZOC

assert_reg
D0 00000040 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

:LSL_REGISTER_BY_IMMEDIATE_BYTE_NEGATIVE

arrange_code
$00040000 ed 08

assert_code
> LSL.B #$06,D0

arrange_reg
D0 00000003 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS ENZOC

assert_reg
D0 000000c0 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---

:LSL_REGISTER_BY_IMMEDIATE_BYTE_ZERO

arrange_code
$00040000 ed 08

assert_code
> LSL.B #$06,D0

arrange_reg
D0 00000000 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS ENZOC

assert_reg
D0 00000000 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --Z--

:LSL_REGISTER_BY_IMMEDIATE_BYTE_EXTEND_CARRY

arrange_code
$00040000 e3 0f

assert_code
> LSL.B #$01,D7

arrange_reg
D0 00000000 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000081
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS ENZOC

assert_reg
D0 00000000 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000002
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS E---C

:LSL_REGISTER_BY_IMMEDIATE_WORD

arrange_code
$00040000 e3 4e

assert_code
> LSL.W #$01,D6

arrange_reg
D0 00000000 000000d1 000000d2 000000d3 000000d4 000000d5 00002001 00000081
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS ENZOC

assert_reg
D0 00000000 000000d1 000000d2 000000d3 000000d4 000000d5 00004002 00000081
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----