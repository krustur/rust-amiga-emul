; ASLR tests
; Only Generated test!


; ===== register by immediate - byte =====================================


:ASL_B_REGISTER_BY_IMMEDIATE_CX_SET

arrange_code
$00040000 ed 00

assert_code
> ASL.B #$06,D0

arrange_reg
D0 00000005 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZ--

assert_reg
D0 00000040 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X--VC
	
:ASL_B_REGISTER_BY_IMMEDIATE_CX_CLEAR

arrange_code
$00040000 ed 00

assert_code
> ASL.B #$06,D0

arrange_reg
D0 00000001 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000040 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_B_REGISTER_BY_IMMEDIATE_N_SET

arrange_code
$00040000 ed 00

assert_code
> ASL.B #$06,D0

arrange_reg
D0 00000002 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-Z-C

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N-V-
	
:ASL_B_REGISTER_BY_IMMEDIATE_N_CLEAR

arrange_code
$00040000 e5 07

assert_code
> ASL.B #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000005
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000014
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_B_REGISTER_BY_IMMEDIATE_Z_SET

arrange_code
$00040000 e5 07

assert_code
> ASL.B #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000c0
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N---

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X-ZVC
	
:ASL_B_REGISTER_BY_IMMEDIATE_Z_CLEAR

arrange_code
$00040000 e5 07

assert_code
> ASL.B #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000001
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000004
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_B_REGISTER_BY_IMMEDIATE_V_SET

arrange_code
$00040000 e7 07

assert_code
> ASL.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000040
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XN--C

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --ZV-
	
:ASL_B_REGISTER_BY_IMMEDIATE_V_CLEAR

arrange_code
$00040000 e7 07

assert_code
> ASL.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000008
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000040
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_B_REGISTER_BY_IMMEDIATE_CX_SET

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0000000c
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZV-

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000001
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X---C
	
:ASR_B_REGISTER_BY_IMMEDIATE_CX_CLEAR

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000078
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0000000f
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_B_REGISTER_BY_IMMEDIATE_N_SET

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000c0
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-ZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000f8
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---
	
:ASR_B_REGISTER_BY_IMMEDIATE_N_CLEAR

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000070
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0000000e
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_B_REGISTER_BY_IMMEDIATE_Z_SET

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000007
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-V-

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X-Z-C
	
:ASR_B_REGISTER_BY_IMMEDIATE_Z_CLEAR

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000008
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000001
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_B_REGISTER_BY_IMMEDIATE_V_CLEAR

arrange_code
$00040000 e6 07

assert_code
> ASR.B #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000018
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000003
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----


; ===== register by immediate - word =====================================


:ASL_W_REGISTER_BY_IMMEDIATE_CX_SET

arrange_code
$00040000 ed 40

assert_code
> ASL.W #$06,D0

arrange_reg
D0 00000505 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZ--

assert_reg
D0 00004140 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X--VC
	
:ASL_W_REGISTER_BY_IMMEDIATE_CX_CLEAR

arrange_code
$00040000 ed 40

assert_code
> ASL.W #$06,D0

arrange_reg
D0 00000101 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00004040 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_W_REGISTER_BY_IMMEDIATE_N_SET

arrange_code
$00040000 ed 40

assert_code
> ASL.W #$06,D0

arrange_reg
D0 00000202 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-Z-C

assert_reg
D0 00008080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N-V-
	
:ASL_W_REGISTER_BY_IMMEDIATE_N_CLEAR

arrange_code
$00040000 e5 47

assert_code
> ASL.W #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000505
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00001414
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_W_REGISTER_BY_IMMEDIATE_Z_SET

arrange_code
$00040000 e5 47

assert_code
> ASL.W #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0000c000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N---

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X-ZVC
	
:ASL_W_REGISTER_BY_IMMEDIATE_Z_CLEAR

arrange_code
$00040000 e5 47

assert_code
> ASL.W #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000101
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000404
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

:ASL_W_REGISTER_BY_IMMEDIATE_V_SET

arrange_code
$00040000 e7 47

assert_code
> ASL.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00004000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XN--C

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --ZV-
	
:ASL_W_REGISTER_BY_IMMEDIATE_V_CLEAR

arrange_code
$00040000 e7 47

assert_code
> ASL.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000808
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00004040
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_W_REGISTER_BY_IMMEDIATE_CX_SET

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000c0c
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZV-

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000181
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X---C
	
:ASR_W_REGISTER_BY_IMMEDIATE_CX_CLEAR

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00007878
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000f0f
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_W_REGISTER_BY_IMMEDIATE_N_SET

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0000c0c0
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-ZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0000f818
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---
	
:ASR_W_REGISTER_BY_IMMEDIATE_N_CLEAR

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00007070
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000e0e
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_W_REGISTER_BY_IMMEDIATE_Z_SET

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000007
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-V-

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X-Z-C
	
:ASR_W_REGISTER_BY_IMMEDIATE_Z_CLEAR

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000808
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000101
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_W_REGISTER_BY_IMMEDIATE_V_CLEAR

arrange_code
$00040000 e6 47

assert_code
> ASR.W #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00001818
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000303
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----


; ===== register by immediate - long =====================================


:ASL_L_REGISTER_BY_IMMEDIATE_CX_SET

arrange_code
$00040000 ed 80

assert_code
> ASL.L #$06,D0

arrange_reg
D0 05050505 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZ--

assert_reg
D0 41414140 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X--VC
	
:ASL_L_REGISTER_BY_IMMEDIATE_CX_CLEAR

arrange_code
$00040000 ed 80

assert_code
> ASL.L #$06,D0

arrange_reg
D0 01010101 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 40404040 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_L_REGISTER_BY_IMMEDIATE_N_SET

arrange_code
$00040000 ed 80

assert_code
> ASL.L #$06,D0

arrange_reg
D0 02020202 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-Z-C

assert_reg
D0 80808080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N-V-
	
:ASL_L_REGISTER_BY_IMMEDIATE_N_CLEAR

arrange_code
$00040000 e5 87

assert_code
> ASL.L #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 05050505
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 14141414
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASL_L_REGISTER_BY_IMMEDIATE_Z_SET

arrange_code
$00040000 e5 87

assert_code
> ASL.L #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 c0000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N---

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X-ZVC
	
:ASL_L_REGISTER_BY_IMMEDIATE_Z_CLEAR

arrange_code
$00040000 e5 87

assert_code
> ASL.L #$02,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 01010101
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 04040404
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

:ASL_L_REGISTER_BY_IMMEDIATE_V_SET

arrange_code
$00040000 e7 87

assert_code
> ASL.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 40000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XN--C

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --ZV-
	
:ASL_L_REGISTER_BY_IMMEDIATE_V_CLEAR

arrange_code
$00040000 e7 87

assert_code
> ASL.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 08080808
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 40404040
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_L_REGISTER_BY_IMMEDIATE_CX_SET

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0c0c0c0c
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZV-

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 01818181
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X---C
	
:ASR_L_REGISTER_BY_IMMEDIATE_CX_CLEAR

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 78787878
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0f0f0f0f
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_L_REGISTER_BY_IMMEDIATE_N_SET

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 c0c0c0c0
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-ZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 f8181818
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---
	
:ASR_L_REGISTER_BY_IMMEDIATE_N_CLEAR

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 70707070
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 0e0e0e0e
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_L_REGISTER_BY_IMMEDIATE_Z_SET

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000007
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -N-V-

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 00000000
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X-Z-C
	
:ASR_L_REGISTER_BY_IMMEDIATE_Z_CLEAR

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 08080808
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 01010101
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----
	
:ASR_L_REGISTER_BY_IMMEDIATE_V_CLEAR

arrange_code
$00040000 e6 87

assert_code
> ASR.L #$03,D7

arrange_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 18181818
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000080 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 03030303
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----


; ===== register by register =============================================

; register by immediate tested the core asl/asr shifting behavior and 
; status register results
;
; now we test:
; - shift by 0 (which is only possible when shifting by register).
;   note that shift by 0 tests also tests that shift count when shifting
;   by register can't exceed 63.
; - large shift counts of 63
; - we can assume register by register is wired up correctly for all 
;   sizes and both directions when above tests is ok

	
:ASL_B_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_SET

arrange_code
$00040000 e1 25

assert_code
> ASL.B D0,D5

arrange_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-ZVC

assert_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS XN---

:ASL_B_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_CLEAR

arrange_code
$00040000 e1 25

assert_code
> ASL.B D0,D5

arrange_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS --ZVC

assert_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---

	
:ASR_B_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_SET

arrange_code
$00040000 e2 24

assert_code
> ASR.B D1,D4

arrange_reg
D0 00000000 ffffffc0 000000d2 000000d3 00000014 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000000 ffffffc0 000000d2 000000d3 00000014 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X----

:ASR_B_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_CLEAR

arrange_code
$00040000 e2 24

assert_code
> ASR.B D1,D4

arrange_reg
D0 00000000 ffffffc0 000000d2 000000d3 00000014 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZVC

assert_reg
D0 00000000 ffffffc0 000000d2 000000d3 00000014 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

:ASL_W_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_SET

arrange_code
$00040000 e1 65

assert_code
> ASL.W D0,D5

arrange_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 0000d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-ZVC

assert_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 0000d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS XN---

:ASL_W_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_CLEAR

arrange_code
$00040000 e1 65

assert_code
> ASL.W D0,D5

arrange_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 0000d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS --ZVC

assert_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 0000d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---

	
:ASR_W_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_SET

arrange_code
$00040000 e2 64

assert_code
> ASR.W D1,D4

arrange_reg
D0 00000000 ffffffc0 000000d2 000000d3 000014d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000000 ffffffc0 000000d2 000000d3 000014d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X----

:ASR_W_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_CLEAR

arrange_code
$00040000 e2 64

assert_code
> ASR.W D1,D4

arrange_reg
D0 00000000 ffffffc0 000000d2 000000d3 000014d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZVC

assert_reg
D0 00000000 ffffffc0 000000d2 000000d3 000014d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

:ASL_L_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_SET

arrange_code
$00040000 e1 a5

assert_code
> ASL.L D0,D5

arrange_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 d5d5d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS X-ZVC

assert_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 d5d5d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS XN---

:ASL_L_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_CLEAR

arrange_code
$00040000 e1 a5

assert_code
> ASL.L D0,D5

arrange_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 d5d5d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS --ZVC

assert_reg
D0 ffffffc0 000000d1 000000d2 000000d3 000000d4 d5d5d5d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -N---

:ASR_L_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_SET

arrange_code
$00040000 e2 a4

assert_code
> ASR.L D1,D4

arrange_reg
D0 00000000 ffffffc0 000000d2 000000d3 14d4d4d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000000 ffffffc0 000000d2 000000d3 14d4d4d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS X----

:ASR_L_REGISTER_BY_REGISTER_CX_SHIFT_0_C_CLEAR_X_UNAFFECTED_STILL_CLEAR

arrange_code
$00040000 e2 a4

assert_code
> ASR.L D1,D4

arrange_reg
D0 00000000 ffffffc0 000000d2 000000d3 14d4d4d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZVC

assert_reg
D0 00000000 ffffffc0 000000d2 000000d3 14d4d4d4 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

:ASL_B_REGISTER_BY_REGISTER_BIG_SHIFT

arrange_code
$00040000 e1 25

assert_code
> ASL.B D0,D5

arrange_reg
D0 ffffff3f 000000d1 000000d2 000000d3 000000d4 000000ff 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XN--C

assert_reg
D0 ffffff3f 000000d1 000000d2 000000d3 000000d4 00000000 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --ZV-

:ASR_B_REGISTER_BY_REGISTER_BIG_SHIFT

arrange_code
$00040000 e2 24

assert_code
> ASR.B D1,D4

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 00000080 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS --ZV-

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 000000ff 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS XN--C

:ASL_W_REGISTER_BY_REGISTER_BIG_SHIFT

arrange_code
$00040000 e1 65

assert_code
> ASL.W D0,D5

arrange_reg
D0 ffffff3f 000000d1 000000d2 000000d3 000000d4 0000ffff 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XN--C

assert_reg
D0 ffffff3f 000000d1 000000d2 000000d3 000000d4 00000000 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --ZV-

:ASR_W_REGISTER_BY_REGISTER_BIG_SHIFT

arrange_code
$00040000 e2 64

assert_code
> ASR.W D1,D4

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 00008000 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS --ZV-

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 0000ffff 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS XN--C

:ASL_L_REGISTER_BY_REGISTER_BIG_SHIFT

arrange_code
$00040000 e1 a5

assert_code
> ASL.L D0,D5

arrange_reg
D0 ffffff3f 000000d1 000000d2 000000d3 000000d4 ffffffff 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XN--C

assert_reg
D0 ffffff3f 000000d1 000000d2 000000d3 000000d4 00000000 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS --ZV-

:ASR_L_REGISTER_BY_REGISTER_BIG_SHIFT

arrange_code
$00040000 e2 a4

assert_code
> ASR.L D1,D4

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS --ZV-

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 ffffffff 000000d5 000000d6 000000d7
A0 000000a0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS XN--C


; ===== memory by 1 ======================================================

; register by immediate tested the core asl/asr shifting behavior and 
; status register results
;
; now we test:
; - shift left and right for some ea modes

:ASL_W_MEMORY_BY_1_AREG_INDIRECT_WITH_PREDECREMENT

arrange_code
$00040000 e1 e0

assert_code
> ASL.W -(A0)

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 00050112 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 00050110 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040002
SR_FLAGS -----

arrange_mem
$00050110 10 10

assert_mem
$00050110 20 20

:ASL_W_MEMORY_BY_1_AREG_INDIRECT_WITH_DISPLACEMENT

arrange_code
$00040000 e1 e8 00 40

assert_code
> ASL.W ($0040,A0)

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 000500d0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
SR_FLAGS -NZ--

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 000500d0 000000a1 000000a2 000000a3 000000a4 000000a5 000000a6 000000a7
PC 00040004
SR_FLAGS X--VC

arrange_mem
$00050110 80 01

assert_mem
$00050110 00 02

:ASR_W_MEMORY_BY_1_AREG_INDIRECT_WITH_POSTINCREMENT

arrange_code
$00040000 e0 de

assert_code
> ASR.W (A6)+

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 00050112 000000a1 000000a2 000000a3 000000a4 000000a5 00050110 000000a7
SR_FLAGS XNZVC

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 00050112 000000a1 000000a2 000000a3 000000a4 000000a5 00050112 000000a7
PC 00040002
SR_FLAGS -----

arrange_mem
$00050110 10 10

assert_mem
$00050110 08 08

:ASR_W_MEMORY_BY_1_AREG_INDIRECT

arrange_code
$00040000 e0 d5

assert_code
> ASR.W (A5)

arrange_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 000500d0 000000a1 000000a2 000000a3 000000a4 00050110 000000a6 000000a7
SR_FLAGS -N-V-

assert_reg
D0 00000000 ffffff3f 000000d2 000000d3 80000000 000000d5 000000d6 000000d7
A0 000500d0 000000a1 000000a2 000000a3 000000a4 00050110 000000a6 000000a7
PC 00040002
SR_FLAGS X-Z-C

arrange_mem
$00050110 00 01

assert_mem
$00050110 00 00
