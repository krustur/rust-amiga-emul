; ----------------------T----------------------------------

; Path: ..\ami-test-runner\src\tests\addx.s
; This file is autogenerated

 ;rts in case this source is run by mistake
 rts

;===========================================

data_register_byte_with_extend_clear
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_clear",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000020,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $000f ; -NZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000030,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_byte_with_extend_set
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_set",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000020,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000031,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_byte_with_extend_set_set_carry_extend
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_set_set_carry_extend",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$000000f0,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000001,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_byte_with_extend_set_set_carry_extend_leave_zero_cleared_test_both_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_set_set_carry_extend_leave_zero_cleared_test_both_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $0000000f,$000000f0,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $0000000f,$00000000,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_byte_with_extend_set_set_carry_extend_leave_zero_set_test_both_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_set_set_carry_extend_leave_zero_set_test_both_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $0000000f,$000000f0,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0014 ; E-Z--

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $0000000f,$00000000,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0015 ; SR=E-Z-C

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_byte_with_extend_set_set_overflow_negative
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_set_set_overflow_negative",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000007f,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000090,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_byte_with_extend_set_set_overflow_negative_test_both_overflow
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_byte_with_extend_set_set_overflow_negative_test_both_overflow",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D3,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$00000080,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDX.B D0,D1

;===========================================

data_register_word_with_extend_clear
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_clear",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001010,$00002020,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $000f ; -NZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001010,$00003030,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_word_with_extend_set
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_set",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001010,$00002020,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001010,$00003031,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_word_with_extend_set_set_carry_extend
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_set_set_carry_extend",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001010,$0000f0f0,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001010,$00000101,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_word_with_extend_set_set_carry_extend_leave_zero_cleared_test_both_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_set_set_carry_extend_leave_zero_cleared_test_both_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$0000000f,$0000fff0,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$0000000f,$00000000,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_word_with_extend_set_set_carry_extend_leave_zero_set_test_both_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_set_set_carry_extend_leave_zero_set_test_both_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$0000000f,$0000fff0,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0014 ; E-Z--

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$0000000f,$00000000,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0015 ; SR=E-Z-C

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_word_with_extend_set_set_overflow_negative
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_set_set_overflow_negative",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00007fff,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00009000,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_word_with_extend_set_set_overflow_negative_zero_test_both_overflow
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_word_with_extend_set_set_overflow_negative_zero_test_both_overflow",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D7,$42

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00008000,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDX.W D2,D3

;===========================================

data_register_long_with_extend_clear
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_clear",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10101010,$20202020,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $000f ; -NZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10101010,$30303030,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.L D4,D5

;===========================================

data_register_long_with_extend_set
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_set",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10101010,$20202020,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10101010,$30303031,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.L D4,D5

;===========================================

data_register_long_with_extend_set_set_carry_extend
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_set_set_carry_extend",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10101010,$f0f0f0f0,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10101010,$01010101,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDX.L D4,D5

;===========================================

data_register_long_with_extend_set_set_carry_extend_leave_zero_cleared_test_both_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_set_set_carry_extend_leave_zero_cleared_test_both_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$0000000f,$fffffff0,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$0000000f,$00000000,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDX.L D4,D5

;===========================================

data_register_long_with_extend_set_set_carry_extend_leave_zero_cleared_set_both_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_set_set_carry_extend_leave_zero_cleared_set_both_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$0000000f,$fffffff0,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0014 ; E-Z--

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$0000000f,$00000000,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0015 ; SR=E-Z-C

.assert_code
 ADDX.L D4,D5

;===========================================

data_register_long_with_extend_set_set_overflow_negative
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_set_set_overflow_negative",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$7fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$90000000,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDX.L D4,D5

;===========================================

data_register_long_with_extend_set_set_overflow_negative_zero_test_both_overflow
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_long_with_extend_set_set_overflow_negative_zero_test_both_overflow",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DB,$84

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$80000000,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDX.L D4,D5

;===========================================

address_register_byte_with_extend_clear
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_byte_with_extend_clear",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00050002,.arrange_mem_00050002
 dc.l $00000000

.arrange_mem_00050002
 dc.b $10,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050003,$00050004,$000000a5,$000000a6,$000000a7
 dc.w $000f ; -NZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D9,$0B

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00050002,.assert_mem_00050002
 dc.l $00000000

.assert_mem_00050002
 dc.b $10,$30

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050002,$00050003,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.B -(A3),-(A4)

;===========================================

address_register_byte_with_extend_set
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_byte_with_extend_set",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00050002,.arrange_mem_00050002
 dc.l $00000000

.arrange_mem_00050002
 dc.b $10,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050003,$00050004,$000000a5,$000000a6,$000000a7
 dc.w $0010 ; E----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D9,$0B

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00050002,.assert_mem_00050002
 dc.l $00000000

.assert_mem_00050002
 dc.b $10,$31

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050002,$00050003,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.B -(A3),-(A4)

;===========================================

address_register_word_with_extend_clear
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_word_with_extend_clear",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000004,$00040110,.arrange_mem_00040110
 dc.l $00000000

.arrange_mem_00040110
 dc.b $10,$10,$20,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050003,$00050004,$00040112,$00040114,$000000a7
 dc.w $000f ; -NZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DD,$4D

.assert_mem
 ;length,address,ptr
 dc.l $00000004,$00040110,.assert_mem_00040110
 dc.l $00000000

.assert_mem_00040110
 dc.b $10,$10,$30,$30

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050003,$00050004,$00040110,$00040112,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.W -(A5),-(A6)

;===========================================

address_register_word_with_extend_set
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_word_with_extend_set",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000004,$00040110,.arrange_mem_00040110
 dc.l $00000000

.arrange_mem_00040110
 dc.b $10,$10,$20,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050003,$00050004,$00040112,$00040114,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DD,$4D

.assert_mem
 ;length,address,ptr
 dc.l $00000004,$00040110,.assert_mem_00040110
 dc.l $00000000

.assert_mem_00040110
 dc.b $10,$10,$30,$31

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $a0a0a0a0,$000000a1,$000000a2,$00050003,$00050004,$00040110,$00040112,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.W -(A5),-(A6)

;===========================================

address_register_long_with_extend_clear
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_long_with_extend_clear",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000008,$00040110,.arrange_mem_00040110
 dc.l $00000000

.arrange_mem_00040110
 dc.b $10,$10,$10,$10,$20,$20,$20,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $00040118,$000000a1,$000000a2,$00050003,$00050004,$00040014,$00040018,$00040114
 dc.w $000e ; -NZO-

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D1,$8F

.assert_mem
 ;length,address,ptr
 dc.l $00000008,$00040110,.assert_mem_00040110
 dc.l $00000000

.assert_mem_00040110
 dc.b $10,$10,$10,$10,$30,$30,$30,$30

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $00040114,$000000a1,$000000a2,$00050003,$00050004,$00040014,$00040018,$00040110
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.L -(A7),-(A0)

;===========================================

address_register_long_with_extend_set
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_long_with_extend_set",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000008,$00040110,.arrange_mem_00040110
 dc.l $00000000

.arrange_mem_00040110
 dc.b $10,$10,$10,$10,$20,$20,$20,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $00040118,$000000a1,$000000a2,$00050003,$00050004,$00040014,$00040018,$00040114
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D1,$8F

.assert_mem
 ;length,address,ptr
 dc.l $00000008,$00040110,.assert_mem_00040110
 dc.l $00000000

.assert_mem_00040110
 dc.b $10,$10,$10,$10,$30,$30,$30,$31

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000010,$0000006f,$00001000,$00006fff,$10000000,$6fffffff,$000000d6,$00004344
 dc.l $00040114,$000000a1,$000000a2,$00050003,$00050004,$00040014,$00040018,$00040110
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDX.L -(A7),-(A0)

