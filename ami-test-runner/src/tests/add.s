; ----------------------T----------------------------------

; Path: ..\ami-test-runner\src\tests\add.s
; This file is autogenerated

 ;rts in case this source is run by mistake
 rts

;===========================================

address_register_indirect_to_data_register_direct_byte
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_indirect_to_data_register_direct_byte",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00050002,.arrange_mem_00050002
 dc.l $00000000

.arrange_mem_00050002
 dc.b $01
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000001,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00050002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D0,$10

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00050002,.assert_mem_00050002
 dc.l $00000000

.assert_mem_00050002
 dc.b $01
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000002,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00050002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADD.B (A0),D0

;===========================================

address_register_indirect_to_data_register_direct_byte_overflow
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_indirect_to_data_register_direct_byte_overflow",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00050002,.arrange_mem_00050002
 dc.l $00000000

.arrange_mem_00050002
 dc.b $01
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $0000007f,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00050002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D0,$10

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00050002,.assert_mem_00050002
 dc.l $00000000

.assert_mem_00050002
 dc.b $01
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000080,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00050002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADD.B (A0),D0

;===========================================

address_register_indirect_to_data_register_direct_byte_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_indirect_to_data_register_direct_byte_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00050002,.arrange_mem_00050002
 dc.l $00000000

.arrange_mem_00050002
 dc.b $01
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000ff,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00050002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D0,$10

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00050002,.assert_mem_00050002
 dc.l $00000000

.assert_mem_00050002
 dc.b $01
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000000,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00050002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0015 ; SR=E-Z-C

.assert_code
 ADD.B (A0),D0

;===========================================

address_register_indirect_to_data_register_direct_word
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_indirect_to_data_register_direct_word",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.arrange_mem_00060002
 dc.l $00000000

.arrange_mem_00060002
 dc.b $00,$01

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000001,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D0,$50

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.assert_mem_00060002
 dc.l $00000000

.assert_mem_00060002
 dc.b $00,$01

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000002,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADD.W (A0),D0

;===========================================

address_register_indirect_to_data_register_direct_word_overflow
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_indirect_to_data_register_direct_word_overflow",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.arrange_mem_00060002
 dc.l $00000000

.arrange_mem_00060002
 dc.b $00,$01

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00007fff,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D0,$50

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.assert_mem_00060002
 dc.l $00000000

.assert_mem_00060002
 dc.b $00,$01

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00008000,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADD.W (A0),D0

;===========================================

address_register_indirect_to_data_register_direct_word_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "address_register_indirect_to_data_register_direct_word_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.arrange_mem_00060002
 dc.l $00000000

.arrange_mem_00060002
 dc.b $00,$01

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $0000ffff,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D0,$50

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.assert_mem_00060002
 dc.l $00000000

.assert_mem_00060002
 dc.b $00,$01

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $00000000,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0015 ; SR=E-Z-C

.assert_code
 ADD.W (A0),D0

;===========================================

data_register_direct_to_data_register_direct_long
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_direct_to_data_register_direct_long",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$54324321
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DE,$80

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$77775555
 dc.l $00060002,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADD.L D0,D7

;===========================================

data_register_direct_to_address_register_indirect_long
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_direct_to_address_register_indirect_long",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000004,$00060002,.arrange_mem_00060002
 dc.l $00000000

.arrange_mem_00060002
 dc.b $11,$22,$33,$44

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$12345678
 dc.l $00060002,$00060002,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DF,$99

.assert_mem
 ;length,address,ptr
 dc.l $00000004,$00060002,.assert_mem_00060002
 dc.l $00000000

.assert_mem_00060002
 dc.b $23,$56,$89,$BC

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$12345678
 dc.l $00060002,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADD.L D7,(A1)+

;===========================================

data_register_direct_to_address_register_indirect_word
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_direct_to_address_register_indirect_word",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.arrange_mem_00060002
 dc.l $00000000

.arrange_mem_00060002
 dc.b $11,$44

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $00060002,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$00060002,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $DD,$5E

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00060002,.assert_mem_00060002
 dc.l $00000000

.assert_mem_00060002
 dc.b $35,$AC

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $00060002,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$00060004,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADD.W D6,(A6)+

;===========================================

data_register_direct_to_address_register_indirect_byte
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "data_register_direct_to_address_register_indirect_byte",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00060002,.arrange_mem_00060002
 dc.l $00000000

.arrange_mem_00060002
 dc.b $44
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$00000046,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $00060003,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$a6a6a6a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $D5,$20

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00060002,.assert_mem_00060002
 dc.l $00000000

.assert_mem_00060002
 dc.b $8A
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$00000046,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $00060002,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$a6a6a6a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADD.B D2,-(A0)

;===========================================

immediate_data_to_address_register_direct_word
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "immediate_data_to_address_register_direct_word",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$00000046,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $ffffff00,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$a6a6a6a6,$000000a7
 dc.w $0000 ; -----

.arrange_code
 ;length,address
 dc.l $00000002,$00040000
 dc.b $D0,$FC,$44,$11

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$00000046,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $00004311,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$a6a6a6a6,$000000a7
 dc.l $00040004 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDA.W #$4411,A0

;===========================================

immediate_data_to_address_register_direct_long
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "immediate_data_to_address_register_direct_long",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$00000046,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $a0a0a0a0,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$a6a6a6a6,$22220000
 dc.w $0000 ; -----

.arrange_code
 ;length,address
 dc.l $00000003,$00040000
 dc.b $DF,$FC,$88,$88,$88,$88

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $23451234,$000000d1,$00000046,$000000d3,$000000d4,$000000d5,$00002468,$12345678
 dc.l $a0a0a0a0,$00060006,$000000a2,$000000a3,$000000a4,$000000a5,$a6a6a6a6,$aaaa8888
 dc.l $00040006 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDA.L #$88888888,A7

