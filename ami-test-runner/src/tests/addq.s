; ----------------------T----------------------------------

; Path: ..\ami-test-runner\src\tests\addq.s
; This file is autogenerated

 ;rts in case this source is run by mistake
 rts

;===========================================

addq_data_to_data_register_direct_byte
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_byte",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $10
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $5A,$18

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $15
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004001,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDQ.B #$5,(A0)+

;===========================================

addq_data_to_data_register_direct_byte_overflow
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_byte_overflow",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $7E
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $5A,$18

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $83
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004001,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $000a ; SR=-N-O-

.assert_code
 ADDQ.B #$5,(A0)+

;===========================================

addq_data_to_data_register_direct_word
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_word",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $60,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$00004000,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $50,$5B

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $60,$28

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$00004002,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDQ.W #$8,(A3)+

;===========================================

addq_data_to_data_register_direct_word_carry
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_word_carry",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $FF,$FE

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$00004000,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $56,$5B

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $00,$01

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$00004002,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0011 ; SR=E---C

.assert_code
 ADDQ.W #$3,(A3)+

;===========================================

addq_data_to_data_register_direct_word_negative
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_word_negative",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000002,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $FF,$F0

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$00004000,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001b ; EN-OC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $56,$5B

.assert_mem
 ;length,address,ptr
 dc.l $00000002,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $FF,$F3

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00004000,$000000a1,$000000a2,$00004002,$000000a4,$000000a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0008 ; SR=-N---

.assert_code
 ADDQ.W #$3,(A3)+

;===========================================

addq_data_to_data_register_direct_long
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_long",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000004,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $60,$70,$80,$20

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$a1a1a1a1,$000000a2,$a3a3a3a3,$a4a4a4a4,$00004000,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $52,$9D

.assert_mem
 ;length,address,ptr
 dc.l $00000004,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $60,$70,$80,$21

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$a1a1a1a1,$000000a2,$a3a3a3a3,$a4a4a4a4,$00004004,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDQ.L #$1,(A5)+

;===========================================

addq_data_to_data_register_direct_long_zero
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_data_register_direct_long_zero",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000004,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $FF,$FF,$FF,$F8

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$a1a1a1a1,$000000a2,$a3a3a3a3,$a4a4a4a4,$00004000,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $50,$9D

.assert_mem
 ;length,address,ptr
 dc.l $00000004,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $00,$00,$00,$00

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$a1a1a1a1,$000000a2,$a3a3a3a3,$a4a4a4a4,$00004004,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0015 ; SR=E-Z-C

.assert_code
 ADDQ.L #$8,(A5)+

;===========================================

addq_data_to_address_register_direct_word
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_address_register_direct_word",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $fffffffe,$a1a1a1a1,$000000a2,$a3a3a3a3,$a4a4a4a4,$a5a5a5a5,$000000a6,$000000a7
 dc.w $0000 ; -----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $50,$48

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $00000006,$a1a1a1a1,$000000a2,$a3a3a3a3,$a4a4a4a4,$a5a5a5a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDQ.W #$8,A0

;===========================================

addq_data_to_address_register_direct_long
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addq_data_to_address_register_direct_long",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$fffffffe,$000000a2,$a3a3a3a3,$a4a4a4a4,$a5a5a5a5,$000000a6,$000000a7
 dc.w $0000 ; -----

.arrange_code
 ;length,address
 dc.l $00000001,$00040000
 dc.b $50,$89

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $a0a0a0a0,$00000006,$000000a2,$a3a3a3a3,$a4a4a4a4,$a5a5a5a5,$000000a6,$000000a7
 dc.l $00040002 ; PC
 dc.w $0000 ; SR=-----

.assert_code
 ADDQ.L #$8,A1

